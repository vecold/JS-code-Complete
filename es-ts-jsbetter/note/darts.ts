/**
 * 
 * @param points 墙壁上挂着一个圆形的飞镖靶。现在请你蒙着眼睛向靶上投掷飞镖。

投掷到墙上的飞镖用二维平面上的点坐标数组表示。飞镖靶的半径为 r 。

请返回能够落在 任意 半径为 r 的圆形靶内或靶上的最大飞镖数。
输入：points = [[-2,0],[2,0],[0,2],[0,-2]], r = 2
输出：4
解释：如果圆形的飞镖靶的圆心为 (0,0) ，半径为 2 ，所有的飞镖都落在靶上，此时落在靶上的飞镖数最大，值为 4 。

 * @param r 
* 思路 1 每个点的上下左右画一个当前点在圆边上的圆，所有的点求最大值
* 思路 2 如果 我用每个两个点确定圆心 然后穷举所有圆心拿最大值肯定是可以的
  死在了确定圆心的公示上 干 ～
 */
var numPoints = function(points, r) {

};